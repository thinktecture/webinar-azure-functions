@page "/products"
@inject ProductRepository Repository

<h1>Products</h1>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>Count: @products.Length</p>
    <table class="table">
        <thead>
            <tr>
                <th>Product Id</th>
                <th>Name</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.ProductId</td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>
                        <AuthorizeView Policy="is-admin">
                            <Authorized>
                                <a class="nav-link" href="products/edit/@product.Id">
                                    <span class="oi oi-pencil" aria-hidden="true"></span> Edit
                                </a>
                            </Authorized>
                        </AuthorizeView>
                        <AuthorizeView>
                            <Authorized>
                                <a class="nav-link" href="products/subscribe/@product.Id">
                                    <span class="oi oi-rss" aria-hidden="true"></span> Subscribe to price changes
                                </a>
                            </Authorized>
                            <NotAuthorized>
                                <a class="nav-link" href="/.auth/login/aad?post_login_redirect_uri=/">
                                    <span class="oi oi-lock-locked" aria-hidden="true"></span> Login to subscribe to price changes
                                </a>
                            </NotAuthorized>
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Product[] products;

    protected override async Task OnInitializedAsync()
    {
        products = await Repository.GetProducts();
    }
}
